#!/bin/bash
while :
do
#Ezzel a dialog boxal lehet kiválasztani a program részeket.
  CHOICE=$(
  dialog --title "Biztonsági mentés, Karbantartás" --menu "Válaszd ki melyik program részt akarod futtatni. A fő program mégse gombra lép ki" 0 0 0 \
  "1)" "Karbantartó program" "2)" "Biztonsági mentő program" "3)" "Visszaállító program" 3>&2 2>&1 1>&3
)
  if [ $? == 1 ] #ez kezeli le a mégse gombot most az egész programból kilép ennek a hatására.
    then
      break
    else
    case $CHOICE in
      "1)")
      find -L /home/ -type d \( -name "snap" -o -name "*.*" \) -prune -o ! -empty -type f -exec md5sum {} + | sort | uniq -w32 --all-repeated=separate > duplikal.txt #ez a programkód megtalálja az őszes fájt a home mappában a snap és a rendszer mappák kivételével és előállítja ezeknek a md5sum kódjait. Sorba rendezi és az ugyan olyan kódú fájlokat az elérési útjait megtartja csoportokban  és ezt betölti az ideglenes duplikal.txt fájlba  
      sor=$(grep -cvP '\S' duplikal.txt) #Itt megszámolom hány ilyen csoport van ügy hogy megszámolja hány üres sor van a fájlban és ezt betölti a sor változóba.
      ures=$(wc -l duplikal.txt | awk '{$2=""; print $0}') #megszámolja a fajban lévő sorok számát azért hogy ha nincs duplikált fájl akkor ne fusson le a program további része feleslegesen
      if [ $ures != 0 ]
      then
        for ((csoportszam=1;csoportszam<=($sor+1);csoportszam++)); #ez a rész addig fut míg a program le nem fut az összes csoporton.
        do
        valasztasilehetoseg=$(awk -v RS= "NR==$csoportszam" duplikal.txt | awk '{$1=""; print $0}' | cut --complement -d " " -f 1 | sed 's/\s\+/ /g'| awk '{print $0, "on"}'); #ez előálítja a választási lehetőségeket a dialog boxnak kivágja az első oszlopot a fájlból és kitörli a spacet az elejéről így csak az elérési utak maradnak meg. A sed parancs azért kelet mert ha az elérési útban pl a fájl nevében van space akkor a dilog box ketté szedné az elérési utat ez a spacet a 0 kódú karaktere cseréli. végül minden fájl végére oda írom az elejére hogy on azért mert így a dilagog box az első választási lehetőséget kijelöli így ha a felhasználó véletlen entert nyom akkor is marjon meg egy fájl.
        eleresiutak=$(awk -v RS= "NR==$csoportszam" duplikal.txt | awk '{$1=""; print $0}' | cut --complement -d " " -f 1 | sed 's/\s\+/ /g') #azért kell külön eltárolni az elérési utat mert az on bezavarna 
        cmd=(dialog --stdout --no-items --extra-button \
        --ok-label "Megtartás" \
        --extra-label "Mégse" \
        --cancel-label "Kilépés" \
        --radiolist "Amit kiválaszt azt tartja meg" 0 0 0 )
        valsztas=$("${cmd[@]}" ${options} ); #A megtartani kivált fáj elérési útja itt elmentődik
        t=$? #ez a mégse és a kilépés gomb lekezelésére van a mégse a jelenlegi csoportból lép ki anélkül hogy kitörölne bármit a kilépés a teljes program részből.
          if [ $t == 1 ]
          then
            break
          elif [ $t == 0 ]
          then
            echo $valsztas | sed 's/\s\+/\n/g' > d.txt;
            echo $eleresiutak | sed 's/\s\+/\n/g' > b.txt; #két ideglenes fájl jön létre azért hogy utána azokat töröljem a csoportból ami nem lett kiválasztva. A sed az előzőleg kicserélt space karaktert cseréli vissza mert a 0 karaktert az rm máshogyan értelmezi. 
            comm -3 d.txt b.txt | cut --complement -c 1 | sed 's/\ \+/ /g' | xargs -d  '\n' rm ; #comm parancs kiszedi az elérési utakból a megtartani valót. cut kivágja az üres sort amit hagy a comm. Az xargs pedig átadja ezeket az elérési utakat az rm parancsnak úgy hogy aposztróffok közé teszi az elérési utakat ez azért kel,mert enélkül nem tudná az rm törölni azokat a fájlokat aminek a nevében vagy space.    
            rm d.txt;
            rm b.txt;
          fi
         done
        fi
     rm duplikal.txt
    if (dialog --title "Törlés" --yesno "Szeretné-e törölni a nem használt csomagokat" 8 78);
      then
      while :
      do
        PASSWORD=$(dialog --passwordbox "Adja meg a rendszer jelszavát" 8 78  --title "jelszó" 3>&1 1>&2 2>&3) #dailog a mi bekéri a jelszót rossz jelszó esetén kiríja hogy rossz jelszó és újra bekéri 
        if [ $? == 1 ]
        then
          break
        else
              if sudo -Sk apt-get autoclean <<< $PASSWORD 2>/dev/null ; then #it törlöm a nem használt csomagokat.
                 dialog --msgbox "A nem használt csomagok sikeresen törölve" 10 80
                 break
              else
                 dialog --msgbox "Rossz jelszó Nyomjon entert és adja meg újra" 10 80
         fi
      fi
      done
      fi
    esac
    case $CHOICE in
      "2)") 
       if (dialog --title "Biztonsági mentés" --yesno "Szeretné menteni pendrive-ra a home mappa tartalmát?" 8 78);
       then
         cd /tmp
         tar --exclude=home_backup.tar --exclude=/home/*/.cache --exclude=/home/*/.local/share/Trash -cpzf home_backup.tar /home/* 2>/dev/null  | tarsiker=$? | dialog --infobox "Home mappa tömörítése folyamatban" 10 80 #Tömöríti a home mappa tartalmát és kijelzi azt hogy fut.
         if [ $tarsiker == 0 ]
         then
             dialog --msgbox "Home mappa tömörítése sikertelen" 10 80
             break
         else
             dialog --msgbox "Home mappa tömörítése sikeres" 10 80      
             felhasznalo=`whoami` #megállapítja melyik user van bejelentkezve. 
             usb=$(dialog --stdout --title "Kérem válasza ki a cél meghajtót amire másolni szeretne Kiválasztani space-el lehet" --dselect /media/$felhasznalo/ 10 100) #Itt tudja a felhasználó kiválasztani hova szeretné menteni a tar fájlt
             if [ $? == 1 ]
             then
                 break
             else
                 dialog --infobox "A program másolja a fájt" 10 80
                 cd /tmp
                 mv home_backup.tar $usb 2>/dev/null  
                 if [ $? == 0 ]
                 then 
                     dialog --msgbox "A fáj másolása megtörtént" 10 80
                 else
                     dialog --msgbox "A fáj másolása sikertelen" 10 80
                 fi
             fi
         fi
       fi  
      clear
    esac
       case $CHOICE in
         "3)")
         if (dialog --title "Visszaállítás pendrive-ról" --yesno "Szeretné visszaállítani az home mappa tartalmát? Figyelmeztetés a home teljes tartalma felülíródik a backup.tar tartalmával!" 8 78);
         then
            user=`whoami`
            while :
            do
              usb=$(dialog --stdout --title "Kérem válasza ki a backup fájlt. Kiválasztani space-el lehet" --fselect /media/$user/ 10 100) # A felhasználó itt tudja kiválasztani a backup fájlt. Ha nem home_backup.tar-t adja meg akkor újra kel kiválasztani.
              if [ $? == 1 ]
              then
                  break
              else
                if [[ $usb == home_backup*.tar ]] #Ez a teszt amiről írtam.
                then
                  tar -xzf $usb -C / 2>/dev/null | dialog --infobox "backup tar kitömörítése" 10 80
                  dialog --msgbox "A home mappa visszaállítása készen van" 10 80
                  break
                else
                  dialog --msgbox "A fáj nem tar kiterjesztésű." 10 80
                fi
             fi
            done
           fi
       esac
    fi
done
clear
exit
